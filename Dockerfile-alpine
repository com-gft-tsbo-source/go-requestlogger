FROM golang:alpine AS BUILDIMAGE

ARG GITHASH
ARG TIMESTAMP
ARG COMPONENT
ARG MODULE
ARG CUSTOMER
ARG PROJECT

ENV GITHASH=$GITHASH
ENV TIMESTAMP=$TIMESTAMP
ENV COMPONENT=$COMPONENT
ENV MODULE=$MODULE
ENV CUSTOMER=$CUSTOMER
ENV PROJECT=$PROJECT

RUN apk add build-base gcc abuild binutils make argp-standalone linux-headers git bash
RUN mkdir /tmp/build

COPY . /tmp/build/src

WORKDIR /tmp/build/src
RUN make clean
RUN GITHASH=${GITHASH} TIMESTAMP=${TIMESTAMP} make dep
RUN GITHASH=${GITHASH} TIMESTAMP=${TIMESTAMP} TARGET=${PROJECT}.${MODULE}.${COMPONENT} make all

FROM alpine

ARG GITHASH
ARG TIMESTAMP
ARG COMPONENT
ARG MODULE
ARG CUSTOMER
ARG PROJECT

ENV GITHASH=$GITHASH
ENV TIMESTAMP=$TIMESTAMP
ENV COMPONENT=$COMPONENT
ENV MODULE=$MODULE
ENV CUSTOMER=$CUSTOMER
ENV PROJECT=$PROJECT

RUN mkdir -p /var/log/${COMPONENT} /workdir
RUN adduser -H -D ${COMPONENT}
COPY --from=BUILDIMAGE /tmp/build/src/build/bin/${PROJECT}.${MODULE}.${COMPONENT} /opt/
RUN chown -R ${COMPONENT}:${COMPONENT} /opt/${PROJECT}.${MODULE}.${COMPONENT} /workdir && \
    chmod o-rwx,g-rx,u=rwx /opt/${PROJECT}.${MODULE}.${COMPONENT} && \
    chmod -R o-rwx,g-w,u=rwX /workdir && \
    ln -s /opt/${PROJECT}.${MODULE}.${COMPONENT} /opt/${COMPONENT} && \
    ln -s /opt/${COMPONENT} /opt/component


LABEL GITHASH=${GITHASH}
LABEL TIMESTAMP=${TIMESTAMP}
LABEL COMPONENT=${COMPONENT}
LABEL MODULE=${MODULE}
LABEL CUSTOMER=${CUSTOMER}
LABEL PROJECT=${PROJECT}

USER ${COMPONENT}
ENTRYPOINT [ "/opt/component" ]
